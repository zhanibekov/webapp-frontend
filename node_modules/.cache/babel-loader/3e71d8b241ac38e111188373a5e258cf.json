{"ast":null,"code":"///////ЗАПРОСЫ НА СЕРВЕР/////////\nimport axios from'axios';var instance=axios.create({baseURL:process.env.REACT_APP_API_URL});instance.interceptors.request.use(function(config){// Retrieve the access token from React state or a state management system\nvar token=localStorage.getItem(\"token\");;// Add the access token to the Authorization header\nconfig.headers.Authorization=\"Bearer \".concat(token);return config;});export default instance;","map":{"version":3,"names":["axios","instance","create","baseURL","process","env","REACT_APP_API_URL","interceptors","request","use","config","token","localStorage","getItem","headers","Authorization"],"sources":["/Users/elamanzanibekov/Documents/GitHub/webapp-frontend/src/axios.js"],"sourcesContent":["///////ЗАПРОСЫ НА СЕРВЕР/////////\nimport axios from 'axios'\n\nconst instance = axios.create({\n    baseURL: process.env.REACT_APP_API_URL,\n});\n\n\ninstance.interceptors.request.use(config => {\n    // Retrieve the access token from React state or a state management system\n    const token = localStorage.getItem(\"token\");;\n\n    // Add the access token to the Authorization header\n    config.headers.Authorization = `Bearer ${token}`;\n\n    return config;\n});\nexport default instance;"],"mappings":"AAAA;AACA,MAAOA,MAAP,KAAkB,OAAlB,CAEA,GAAMC,SAAQ,CAAGD,KAAK,CAACE,MAAN,CAAa,CAC1BC,OAAO,CAAEC,OAAO,CAACC,GAAR,CAAYC,iBADK,CAAb,CAAjB,CAKAL,QAAQ,CAACM,YAAT,CAAsBC,OAAtB,CAA8BC,GAA9B,CAAkC,SAAAC,MAAM,CAAI,CACxC;AACA,GAAMC,MAAK,CAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd,CAA4C,CAE5C;AACAH,MAAM,CAACI,OAAP,CAAeC,aAAf,kBAAyCJ,KAAzC,EAEA,MAAOD,OAAP,CACH,CARD,EASA,cAAeT,SAAf"},"metadata":{},"sourceType":"module"}