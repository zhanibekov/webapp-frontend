{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nexport const fetchPosts = createAsyncThunk('posts/fetchPosts', async () => {\n  const {\n    data\n  } = await axios.get('http://localhost:4444/posts');\n  return data;\n});\nconst initialState = {\n  posts: {\n    items: [],\n    status: 'loading'\n  },\n  tags: {\n    items: [],\n    status: 'loading'\n  }\n};\nconst postsSlice = createSlice({\n  name: 'posts',\n  initialState,\n  reducers: {},\n  extraReducers: {\n    [fetchPosts.pending]: state => {\n      state.posts.items = [];\n      state.posts.status = 'loading';\n    },\n    [fetchPosts.fulfilled]: (state, action) => {\n      state.posts.items = action.payload;\n      state.posts.status = 'loaded';\n    },\n    [fetchPosts.rejected]: state => {\n      state.posts.items = [];\n      state.posts.status = 'error';\n    }\n  }\n});\nexport const postsReducer = postsSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axios","fetchPosts","data","get","initialState","posts","items","status","tags","postsSlice","name","reducers","extraReducers","pending","state","fulfilled","action","payload","rejected","postsReducer","reducer"],"sources":["/Users/elamanzanibekov/Documents/GitHub/webapp-frontend/src/redux/slices/Posts.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nexport const fetchPosts = createAsyncThunk('posts/fetchPosts', async() => {\n    const { data } = await axios.get('http://localhost:4444/posts');\n    return data;\n})\n\nconst initialState = {\n    posts: {\n        items: [],\n        status: 'loading',\n    },\n    tags: {\n        items: [],\n        status: 'loading'\n    },\n}\n\nconst postsSlice = createSlice({\n    name: 'posts',\n    initialState,\n    reducers: {},\n    extraReducers: {\n        [fetchPosts.pending]: (state) => {\n            state.posts.items = [];\n            state.posts.status = 'loading';\n        },\n        [fetchPosts.fulfilled]: (state, action) => {\n            state.posts.items = action.payload;\n            state.posts.status = 'loaded';\n\n        },\n\n        [fetchPosts.rejected]: (state) => {\n            state.posts.items = [];\n            state.posts.status = 'error';\n\n        }\n    }\n});\nexport const postsReducer = postsSlice.reducer;"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,gBAAtB,QAA8C,kBAA9C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,MAAMC,UAAU,GAAGF,gBAAgB,CAAC,kBAAD,EAAqB,YAAW;EACtE,MAAM;IAAEG;EAAF,IAAW,MAAMF,KAAK,CAACG,GAAN,CAAU,6BAAV,CAAvB;EACA,OAAOD,IAAP;AACH,CAHyC,CAAnC;AAKP,MAAME,YAAY,GAAG;EACjBC,KAAK,EAAE;IACHC,KAAK,EAAE,EADJ;IAEHC,MAAM,EAAE;EAFL,CADU;EAKjBC,IAAI,EAAE;IACFF,KAAK,EAAE,EADL;IAEFC,MAAM,EAAE;EAFN;AALW,CAArB;AAWA,MAAME,UAAU,GAAGX,WAAW,CAAC;EAC3BY,IAAI,EAAE,OADqB;EAE3BN,YAF2B;EAG3BO,QAAQ,EAAE,EAHiB;EAI3BC,aAAa,EAAE;IACX,CAACX,UAAU,CAACY,OAAZ,GAAuBC,KAAD,IAAW;MAC7BA,KAAK,CAACT,KAAN,CAAYC,KAAZ,GAAoB,EAApB;MACAQ,KAAK,CAACT,KAAN,CAAYE,MAAZ,GAAqB,SAArB;IACH,CAJU;IAKX,CAACN,UAAU,CAACc,SAAZ,GAAwB,CAACD,KAAD,EAAQE,MAAR,KAAmB;MACvCF,KAAK,CAACT,KAAN,CAAYC,KAAZ,GAAoBU,MAAM,CAACC,OAA3B;MACAH,KAAK,CAACT,KAAN,CAAYE,MAAZ,GAAqB,QAArB;IAEH,CATU;IAWX,CAACN,UAAU,CAACiB,QAAZ,GAAwBJ,KAAD,IAAW;MAC9BA,KAAK,CAACT,KAAN,CAAYC,KAAZ,GAAoB,EAApB;MACAQ,KAAK,CAACT,KAAN,CAAYE,MAAZ,GAAqB,OAArB;IAEH;EAfU;AAJY,CAAD,CAA9B;AAsBA,OAAO,MAAMY,YAAY,GAAGV,UAAU,CAACW,OAAhC"},"metadata":{},"sourceType":"module"}