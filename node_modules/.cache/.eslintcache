[{"/Users/elamanzanibekov/Documents/GitHub/webapp-frontend/src/index.js":"1","/Users/elamanzanibekov/Documents/GitHub/webapp-frontend/src/App.js":"2","/Users/elamanzanibekov/Documents/GitHub/webapp-frontend/src/theme.js":"3","/Users/elamanzanibekov/Documents/GitHub/webapp-frontend/src/redux/store.js":"4","/Users/elamanzanibekov/Documents/GitHub/webapp-frontend/src/redux/slices/Auth.js":"5","/Users/elamanzanibekov/Documents/GitHub/webapp-frontend/src/pages/index.js":"6","/Users/elamanzanibekov/Documents/GitHub/webapp-frontend/src/redux/slices/Posts.js":"7","/Users/elamanzanibekov/Documents/GitHub/webapp-frontend/src/components/index.js":"8","/Users/elamanzanibekov/Documents/GitHub/webapp-frontend/src/pages/FullPost.jsx":"9","/Users/elamanzanibekov/Documents/GitHub/webapp-frontend/src/pages/Home.jsx":"10","/Users/elamanzanibekov/Documents/GitHub/webapp-frontend/src/components/TagsBlock.jsx":"11","/Users/elamanzanibekov/Documents/GitHub/webapp-frontend/src/components/CommentsBlock.jsx":"12","/Users/elamanzanibekov/Documents/GitHub/webapp-frontend/src/components/Post/index.jsx":"13","/Users/elamanzanibekov/Documents/GitHub/webapp-frontend/src/pages/AddPost/index.jsx":"14","/Users/elamanzanibekov/Documents/GitHub/webapp-frontend/src/pages/Login/index.jsx":"15","/Users/elamanzanibekov/Documents/GitHub/webapp-frontend/src/pages/Registration/index.jsx":"16","/Users/elamanzanibekov/Documents/GitHub/webapp-frontend/src/components/AddComment/index.jsx":"17","/Users/elamanzanibekov/Documents/GitHub/webapp-frontend/src/components/SideBlock/index.jsx":"18","/Users/elamanzanibekov/Documents/GitHub/webapp-frontend/src/components/UserInfo/index.jsx":"19","/Users/elamanzanibekov/Documents/GitHub/webapp-frontend/src/components/Header/index.jsx":"20","/Users/elamanzanibekov/Documents/GitHub/webapp-frontend/src/axios.js":"21","/Users/elamanzanibekov/Documents/GitHub/webapp-frontend/src/components/Post/Skeleton.jsx":"22"},{"size":693,"mtime":1715339523188,"results":"23","hashOfConfig":"24"},{"size":1245,"mtime":1716403604801,"results":"25","hashOfConfig":"24"},{"size":270,"mtime":1715339523190,"results":"26","hashOfConfig":"24"},{"size":276,"mtime":1715339523190,"results":"27","hashOfConfig":"24"},{"size":2380,"mtime":1719743702164,"results":"28","hashOfConfig":"24"},{"size":187,"mtime":1715339523190,"results":"29","hashOfConfig":"24"},{"size":2093,"mtime":1719426955569,"results":"30","hashOfConfig":"24"},{"size":199,"mtime":1715339523188,"results":"31","hashOfConfig":"24"},{"size":2275,"mtime":1719425334525,"results":"32","hashOfConfig":"24"},{"size":2724,"mtime":1719766048435,"results":"33","hashOfConfig":"24"},{"size":1181,"mtime":1715339523188,"results":"34","hashOfConfig":"24"},{"size":1602,"mtime":1715339523187,"results":"35","hashOfConfig":"24"},{"size":2586,"mtime":1716317814235,"results":"36","hashOfConfig":"24"},{"size":4465,"mtime":1719426512303,"results":"37","hashOfConfig":"24"},{"size":2100,"mtime":1719478872912,"results":"38","hashOfConfig":"24"},{"size":2563,"mtime":1715339523190,"results":"39","hashOfConfig":"24"},{"size":767,"mtime":1715339523187,"results":"40","hashOfConfig":"24"},{"size":412,"mtime":1715339523188,"results":"41","hashOfConfig":"24"},{"size":482,"mtime":1715339523188,"results":"42","hashOfConfig":"24"},{"size":1599,"mtime":1715339523187,"results":"43","hashOfConfig":"24"},{"size":492,"mtime":1719425109167,"results":"44","hashOfConfig":"24"},{"size":1264,"mtime":1715339523187,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"124ptv8",{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68"},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90"},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97"},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","suppressedMessages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","suppressedMessages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","suppressedMessages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","suppressedMessages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/elamanzanibekov/Documents/GitHub/webapp-frontend/src/index.js",[],[],"/Users/elamanzanibekov/Documents/GitHub/webapp-frontend/src/App.js",["116"],[],"import Container from \"@mui/material/Container\";\nimport { Routes, Route } from 'react-router-dom'\nimport React from \"react\";\nimport { Header } from \"./components\";\nimport { Home, FullPost, Registration, AddPost, Login } from \"./pages\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchAuthMe, selectIsAuth } from \"./redux/slices/Auth\";\n\n\nfunction App() {\n    const dispatch = useDispatch()\n    const isAuth = useSelector(selectIsAuth);\n    React.useEffect(() => {\n        dispatch(fetchAuthMe());\n    }, [dispatch]);\n    return ( <\n        >\n\n        <\n        Header / >\n        <\n        Container maxWidth = \"lg\" >\n        <\n        Routes >\n        <\n        Route path = \"/\"\n        element = { < Home / > }\n        />  <\n        Route path = \"/posts/:id\"\n        element = { < FullPost / > }\n        />  <\n        Route path = \"/posts/:id/edit\"\n        element = { < AddPost / > }\n        />  <\n        Route path = \"/add-post\"\n        element = { < AddPost / > }\n        />  <\n        Route path = \"/login\"\n        element = { < Login / > }\n        /> <\n        Route path = \"/register\"\n        element = { < Registration / > }\n        />  <\n        /Routes >  <\n        /Container> </ >\n    );\n}\n\nexport default App;","/Users/elamanzanibekov/Documents/GitHub/webapp-frontend/src/theme.js",[],[],"/Users/elamanzanibekov/Documents/GitHub/webapp-frontend/src/redux/store.js",[],[],"/Users/elamanzanibekov/Documents/GitHub/webapp-frontend/src/redux/slices/Auth.js",[],[],"/Users/elamanzanibekov/Documents/GitHub/webapp-frontend/src/pages/index.js",[],[],"/Users/elamanzanibekov/Documents/GitHub/webapp-frontend/src/redux/slices/Posts.js",["117"],[],"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nexport const fetchPosts = createAsyncThunk('posts/fetchPosts', async() => {\n    const { data } = await axios.get(`${process.env.REACT_APP_API_URL}/posts`);\n    return data;\n})\n\nexport const fetchTags = createAsyncThunk('posts/fetchTags', async() => {\n    const { data } = await axios.get(`${process.env.REACT_APP_API_URL}/tags`);\n    return data;\n})\n\nexport const fetchRemovePosts = createAsyncThunk('posts/fetchRemovePosts', async(id) => {\n    const { data } = await axios.delete(`${process.env.REACT_APP_API_URL}/posts/${id}`);\n    return data;\n})\n\nconst initialState = {\n    posts: {\n        items: [],\n        status: 'loading',\n    },\n    tags: {\n        items: [],\n        status: 'loading'\n    },\n}\n\nconst postsSlice = createSlice({\n    name: 'posts',\n    initialState,\n    reducers: {},\n    extraReducers: {\n        ////Получение статей\n        [fetchPosts.pending]: (state) => {\n            state.posts.items = [];\n            state.posts.status = 'loading';\n        },\n        [fetchPosts.fulfilled]: (state, action) => {\n            state.posts.items = action.payload;\n            state.posts.status = 'loaded';\n\n        },\n\n        [fetchPosts.rejected]: (state) => {\n            state.posts.items = [];\n            state.posts.status = 'error';\n\n        },\n        ///Получение тэгов\n        [fetchTags.pending]: (state) => {\n            state.tags.items = [];\n            state.tags.status = 'loading';\n        },\n        [fetchTags.fulfilled]: (state, action) => {\n            state.tags.items = action.payload;\n            state.tags.status = 'loaded';\n\n        },\n\n        [fetchTags.rejected]: (state) => {\n            state.tags.items = [];\n            state.tags.status = 'error';\n\n        },\n        ///Удаление статей\n        [fetchRemovePosts.pending]: (state, action) => {\n            state.posts.items = state.posts.items.filter(obj => obj._id != action.meta.arg);\n        }\n    }\n});\nexport const postsReducer = postsSlice.reducer;","/Users/elamanzanibekov/Documents/GitHub/webapp-frontend/src/components/index.js",[],[],"/Users/elamanzanibekov/Documents/GitHub/webapp-frontend/src/pages/FullPost.jsx",[],[],"/Users/elamanzanibekov/Documents/GitHub/webapp-frontend/src/pages/Home.jsx",[],[],"/Users/elamanzanibekov/Documents/GitHub/webapp-frontend/src/components/TagsBlock.jsx",[],[],"/Users/elamanzanibekov/Documents/GitHub/webapp-frontend/src/components/CommentsBlock.jsx",[],[],"/Users/elamanzanibekov/Documents/GitHub/webapp-frontend/src/components/Post/index.jsx",[],[],"/Users/elamanzanibekov/Documents/GitHub/webapp-frontend/src/pages/AddPost/index.jsx",["118","119"],[],"import React from 'react';\nimport TextField from '@mui/material/TextField';\nimport Paper from '@mui/material/Paper';\nimport Button from '@mui/material/Button';\nimport SimpleMDE from 'react-simplemde-editor';\nimport { selectIsAuth } from \"../../redux/slices/Auth\";\nimport { useSelector } from 'react-redux';\n\nimport axios from '../../axios';\nimport 'easymde/dist/easymde.min.css';\nimport styles from './AddPost.module.scss';\nimport { Navigate, useNavigate, useParams } from 'react-router-dom';\nexport const AddPost = () => {\n  const {id} = useParams()\n  const navigate = useNavigate();\n  const isAuth = useSelector(selectIsAuth);\n  const [isLoading, setLoading] = React.useState(false);\n  const [text, setText] = React.useState('');\n  const [title, setTitle] = React.useState('');\n  const [tags, setTags] = React.useState('');\n  const [imageUrl, setImageUrl] = React.useState('');\n\n  const inputFileRef = React.useRef(null)\n  const isEditing = Boolean(id)\n\n  const handleChangeFile = async(event) => {\n    console.log(event.target.files);\n    try {\n      const formData = new FormData();\n        const file = event.target.files[0];\n        formData.append('image', file)\n        const { data } = await axios.post(`${process.env.REACT_APP_API_URL}/upload`, formData);\n        console.log(data);\n        setImageUrl(data.url)\n      }catch(error) {\n        console.warn(error);\n        alert('Ошибка при загрузке файла!')\n    }\n  };\n\n  const onClickRemoveImage = () => {\n    setImageUrl();\n  };\n\n  const onChange = React.useCallback((value) => {\n    setText(value);\n  }, []);\n\n  const onSubmit = async() => {\n    try {\n      setLoading(true);\n      const fields = {\n        title,\n        imageUrl,\n        tags: tags.split(','),\n        text, \n      };\n      const { data } = isEditing\n      ? await axios.patch(`${process.env.REACT_APP_API_URL}/posts/${id}`, fields)\n      : await axios.post(`${process.env.REACT_APP_API_URL}/posts`, fields);\n      const _id = isEditing ? id  : data._id;\n      navigate(`/posts/${_id}`)\n    } catch(err) {\n      console.warn(err);\n      alert('Ошибка при создании статьи')\n    }\n    };\n    \n    React.useEffect(() => {\n      if(id) {\n         axios.get(`${process.env.REACT_APP_API_URL}/posts/${id}`).then(({data}) => {\n          setTitle(data.title);\n          setText(data.text);\n          setImageUrl(data.imageUrl);\n          setTags(data.tags.join(','))\n        }).catch(error => {\n          console.warn(error);\n          alert('Ошибка при получении статьи');\n        })\n        }\n    },[])\n\n  const options = React.useMemo(\n    () => ({\n      spellChecker: false,\n      maxHeight: '400px',\n      autofocus: true,\n      placeholder: 'Введите текст...',\n      status: false,\n      autosave: {\n        enabled: true,\n        delay: 1000,\n      },\n    }),\n    [],\n  );\n  if (!window.localStorage.getItem('token') && !isAuth) {\n    return(\n      <Navigate to='/' />\n    ) \n  }\n  console.log({title, tags, text});\n\n  return (\n    <Paper style={{ padding: 30 }}>\n      <Button onClick={() => inputFileRef.current.click()} variant=\"outlined\" size=\"large\">\n        Загрузить превью\n      </Button>\n      <input  ref={inputFileRef} type=\"file\" onChange={handleChangeFile} hidden />\n      {imageUrl && (\n        <>\n        <Button variant=\"contained\" color=\"error\" onClick={onClickRemoveImage}>\n          Удалить\n        </Button>\n         <img className={styles.image}  src={`${process.env.REACT_APP_API_URL}${imageUrl}`} alt=\"Uploaded\" />\n        </>\n      )}\n      <br />\n      <br />\n      <TextField\n        classes={{ root: styles.title }}\n        variant=\"standard\"\n        placeholder=\"Заголовок статьи...\"\n        value={title}\n        onChange={(e) => setTitle(e.target.value)}\n        fullWidth\n      />\n\n      <TextField \n      value={tags}\n      onChange={(e) => setTags(e.target.value)}\n      classes={{ root: styles.tags }} variant=\"standard\" placeholder=\"Тэги\" fullWidth />\n      <SimpleMDE className={styles.editor} value={text} onChange={onChange} options={options} />\n      <div className={styles.buttons}>\n        <Button onClick={onSubmit} size=\"large\" variant=\"contained\">\n          { isEditing ? 'Сохранить' :  'Опубликовать' }\n        </Button>\n        <a href=\"/\">\n          <Button size=\"large\">Отмена</Button>\n        </a>\n      </div>\n    </Paper>\n  );\n      }","/Users/elamanzanibekov/Documents/GitHub/webapp-frontend/src/pages/Login/index.jsx",[],[],"/Users/elamanzanibekov/Documents/GitHub/webapp-frontend/src/pages/Registration/index.jsx",["120"],[],"import React from 'react';\nimport Typography from '@mui/material/Typography';\nimport TextField from '@mui/material/TextField';\nimport Paper from '@mui/material/Paper';\nimport Button from '@mui/material/Button';\nimport Avatar from '@mui/material/Avatar';\nimport { fetchRegister, fetchUserData, selectIsAuth } from \"../../redux/slices/Auth\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useForm } from 'react-hook-form';\nimport {Navigate} from 'react-router-dom'\n\nimport styles from './Login.module.scss';\n\nexport const Registration = () => {\n  const isAuth = useSelector(selectIsAuth)\n  const dispatch = useDispatch();\n  const {register, handleSubmit, formState:{errors, isValid}} = useForm({\n    defaultValues : {\n      fullName: 'Жунисали Еламан',\n      email: 'elamanzhanibekov@gmail.com',\n      password: '870536505345',\n    },\n    mode: 'onChange',\n  });\n\n  const onSubmit = async(values) => {\n    const data = await dispatch(fetchRegister(values));\n    if(!data.payload) {\n      return alert('Не удалось зарегистрироваться')\n    }\n   if('token' in data.payload) {\n    window.localStorage.setItem('token', data.payload.token);\n   }\n   console.log(data);\n  }\n \n    if(isAuth) {\n      return <Navigate  to={'/'}/>;\n    }\n  return (\n    <Paper classes={{ root: styles.root }}>\n      <Typography classes={{ root: styles.title }} variant=\"h5\">\n        Создание аккаунта\n      </Typography>\n      <div className={styles.avatar}>\n        <Avatar sx={{ width: 100, height: 100 }} />\n      </div>\n      <form onSubmit={handleSubmit(onSubmit)}>\n\n      <TextField error={Boolean(errors.fullName?.message)}\n         type='fullName' helperText={errors.fullName?.message}\n        {...register('fullName',{required: 'Укажите полное имя'})} className={styles.field} label=\"Полное имя\" fullWidth />\n\n\n      <TextField error={Boolean(errors.email?.message)}\n         type='email' helperText={errors.email?.message}\n        {...register('email',{required: 'Укажите почту'})} className={styles.field} label=\"E-Mail\" fullWidth />\n\n\n      <TextField error={Boolean(errors.password?.message)}\n        type='password' helperText={errors.password?.message}\n        {...register('password',{required: 'Укажите пароль'})} className={styles.field} label=\"Пароль\" fullWidth />\n\n\n      <Button disabled={!isValid} type='submit' variant=\"contained\" fullWidth>\n        Зарегистрироваться\n      </Button>\n\n      </form>\n    </Paper>\n  );\n};\n","/Users/elamanzanibekov/Documents/GitHub/webapp-frontend/src/components/AddComment/index.jsx",[],[],"/Users/elamanzanibekov/Documents/GitHub/webapp-frontend/src/components/SideBlock/index.jsx",[],[],"/Users/elamanzanibekov/Documents/GitHub/webapp-frontend/src/components/UserInfo/index.jsx",[],[],"/Users/elamanzanibekov/Documents/GitHub/webapp-frontend/src/components/Header/index.jsx",[],[],"/Users/elamanzanibekov/Documents/GitHub/webapp-frontend/src/axios.js",[],[],"/Users/elamanzanibekov/Documents/GitHub/webapp-frontend/src/components/Post/Skeleton.jsx",[],[],{"ruleId":"121","severity":1,"message":"122","line":12,"column":11,"nodeType":"123","messageId":"124","endLine":12,"endColumn":17},{"ruleId":"125","severity":1,"message":"126","line":68,"column":73,"nodeType":"127","messageId":"128","endLine":68,"endColumn":75},{"ruleId":"121","severity":1,"message":"129","line":17,"column":10,"nodeType":"123","messageId":"124","endLine":17,"endColumn":19},{"ruleId":"130","severity":1,"message":"131","line":81,"column":7,"nodeType":"132","endLine":81,"endColumn":9,"suggestions":"133"},{"ruleId":"121","severity":1,"message":"134","line":7,"column":25,"nodeType":"123","messageId":"124","endLine":7,"endColumn":38},"no-unused-vars","'isAuth' is assigned a value but never used.","Identifier","unusedVar","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'isLoading' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["135"],"'fetchUserData' is defined but never used.",{"desc":"136","fix":"137"},"Update the dependencies array to be: [id]",{"range":"138","text":"139"},[2525,2527],"[id]"]